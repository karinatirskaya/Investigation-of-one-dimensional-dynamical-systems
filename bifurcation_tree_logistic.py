
from functools import lru_cache
'''
Из модуля инстурменты для функций я импортирую штуку,
помогает питону не забывать одни и те же вычисления.
'''
from matplotlib import pyplot as plt
'''
Импортирую 2д графики, в моем коде они называются plt
'''
import sys
sys.setrecursionlimit(10000)
'''
Увеличиваем лимит на рекурсию
'''
#Чтобы иметь все данные для построения фазового портрета
#Заведем соответствующие списки
def bifur_logistic():
    l_list = [] # в нем содержатся значения функции
    n_list = [] # в нем бужет содержатся номер шага
    '''
    Это мы сказали питону, что КОНКРЕТНО ЭТУ ФУНКЦИЮ под фразой
    @lru_cache() надо запоминать 
    '''
    @lru_cache() # фраза, которая говорит компьютеру - запомни штуку ниже
    def l(r, x_0, n):
        global lk
        global nk
        if n == 1:
            a = r*x_0*(1-x_0)
            l_list.append(a)
            n_list.append(n)
            return a
        a = r*l(r, x_0, n-1)*(1 - l(r, x_0, n-1))
        l_list.append(a)
        n_list.append(n)
        return a

    r_list = []
    l_list1 = []# список, в котором будут храниться все l_list для всех r_list

    for i in range(20000, 40000): #перебирает rки
        r = i/10000
        l_list = [] # зануляем, тк на каждый r, нужны разные значения l_list и n_list
        n_list = []
        l(r, 0.1, 1000) # заполнение списков
        for j in range(200, 1000): #для каждого р запоминаем x
            r_list.append(r)
            l_list1.append(l_list[j])

    fig = plt.figure()
    ax = fig.add_subplot()
    ax.set_title('Бифуркационное дерево для \n логистического отображения rx(1-x)')
    ax.scatter(r_list, l_list1, s=0.00001)
    ax.set_xlabel(r'$ r $')
    ax.set_ylabel(r'$ x $')
    plt.show()
    '''
    Фазовый портрет - это график, где используется
    одна динамическая переменная
    
    График зависимости двух динамических переменных называется
    стробоскопическое сечение
    или
    отображение Пуанкаре
    '''